{
  "contractName": "SupportsInterfaceWithLookupMock",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "INTERFACE_ID_ERC165",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"INTERFACE_ID_ERC165\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"A contract implementing SupportsInterfaceWithLookup implement ERC165 itself.\"},\"supportsInterface(bytes4)\":{\"details\":\"Implement supportsInterface(bytes4) using a lookup table.\"}},\"stateVariables\":{\"_supportedInterfaces\":{\"details\":\"A mapping of interface id to whether or not it's supported.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"https://eips.ethereum.org/EIPS/eip-214#specification From the specification: > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead throw an exception. > These operations include [...], LOG0, LOG1, LOG2, [...] therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works) solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol\":\"SupportsInterfaceWithLookupMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol\":{\"keccak256\":\"0xee29c429342cc3e4357de313c65cc06e2c7d38a5d4a956ce682c490224dd8340\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5b0d40d1da3dcdfb3640ad4522142665701bfa28931eaf35905e481b70880f9\",\"dweb:/ipfs/QmQaXNakccgCX2YRQ3or67he5r2KGCmeuKUuCxHb87DZXP\"]},\"project:/contracts/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100276301ffc9a760e01b61002c60201b60201c565b6101a4565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415610095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008c90610124565b60405180910390fd5b6001600080837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600061010e602f83610144565b915061011982610155565b604082019050919050565b6000602082019050818103600083015261013d81610101565b9050919050565b600082825260208201905092915050565b7f455243313635496e7465726661636573537570706f727465643a20696e76616c60008201527f696420696e746572666163652069640000000000000000000000000000000000602082015250565b610212806101b36000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b57806334d7006c1461006b575b600080fd5b61005560048036038101906100509190610110565b610089565b6040516100629190610157565b60405180910390f35b6100736100f0565b6040516100809190610172565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6301ffc9a760e01b81565b60008135905061010a816101c5565b92915050565b60006020828403121561012257600080fd5b6000610130848285016100fb565b91505092915050565b6101428161018d565b82525050565b61015181610199565b82525050565b600060208201905061016c6000830184610139565b92915050565b60006020820190506101876000830184610148565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6101ce81610199565b81146101d957600080fd5b5056fea2646970667358221220aacfb4d562c7c6d32229b37d4669378ae6567645117b9ced72ed13198f3eefb964736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b57806334d7006c1461006b575b600080fd5b61005560048036038101906100509190610110565b610089565b6040516100629190610157565b60405180910390f35b6100736100f0565b6040516100809190610172565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6301ffc9a760e01b81565b60008135905061010a816101c5565b92915050565b60006020828403121561012257600080fd5b6000610130848285016100fb565b91505092915050565b6101428161018d565b82525050565b61015181610199565b82525050565b600060208201905061016c6000830184610139565b92915050565b60006020820190506101876000830184610148565b92915050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6101ce81610199565b81146101d957600080fd5b5056fea2646970667358221220aacfb4d562c7c6d32229b37d4669378ae6567645117b9ced72ed13198f3eefb964736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1216:226",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "153:220:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "163:74:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "229:3:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "234:2:226",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "170:58:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "170:67:226"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "163:3:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "335:3:226"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                      "nodeType": "YulIdentifier",
                      "src": "246:88:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "246:93:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "246:93:226"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "348:19:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "359:3:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "364:2:226",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "355:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:12:226"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "348:3:226"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "141:3:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "149:3:226",
                "type": ""
              }
            ],
            "src": "7:366:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "550:248:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "560:26:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "572:9:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "583:2:226",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "568:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "568:18:226"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "560:4:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "607:9:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:1:226",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "603:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "603:17:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "626:4:226"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:226"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "622:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:20:226"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "596:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:47:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "596:47:226"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "652:139:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "786:4:226"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "660:124:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "660:131:226"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "652:4:226"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "530:9:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "545:4:226",
                "type": ""
              }
            ],
            "src": "379:419:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:73:226",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "917:3:226"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "922:6:226"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "910:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "910:19:226"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "938:29:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "957:3:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:4:226",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "953:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "953:14:226"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "938:11:226"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "872:3:226",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "877:6:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "888:11:226",
                "type": ""
              }
            ],
            "src": "804:169:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1085:128:226",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1115:1:226",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1103:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:14:226"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1119:34:226",
                        "type": "",
                        "value": "ERC165InterfacesSupported: inval"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1096:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:58:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1096:58:226"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1175:6:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1183:2:226",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:15:226"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1188:17:226",
                        "type": "",
                        "value": "id interface id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:42:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1164:42:226"
                }
              ]
            },
            "name": "store_literal_in_memory_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1077:6:226",
                "type": ""
              }
            ],
            "src": "979:234:226"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC165InterfacesSupported: inval\")\n\n        mstore(add(memPtr, 32), \"id interface id\")\n\n    }\n\n}\n",
      "id": 226,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1466:226",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "58:86:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "68:29:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "90:6:226"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "77:12:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "77:20:226"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "68:5:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:226"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "106:25:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "106:32:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "106:32:226"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "36:6:226",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "44:3:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "52:5:226",
                "type": ""
              }
            ],
            "src": "7:137:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:195:226",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "261:16:226",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:226",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:226",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "263:6:226"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "263:12:226"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "263:12:226"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "236:7:226"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "245:9:226"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "232:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "232:23:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "257:2:226",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "228:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:32:226"
                  },
                  "nodeType": "YulIf",
                  "src": "225:2:226"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "287:116:226",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "302:15:226",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "316:1:226",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "306:6:226",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "331:62:226",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "365:9:226"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "376:6:226"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "361:3:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "361:22:226"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "385:7:226"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "341:19:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "341:52:226"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "331:6:226"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "185:9:226",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "196:7:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "208:6:226",
                "type": ""
              }
            ],
            "src": "150:260:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:50:226",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "492:3:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "512:5:226"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "497:14:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:21:226"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "485:34:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "485:34:226"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:226",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "470:3:226",
                "type": ""
              }
            ],
            "src": "416:109:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "594:52:226",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "611:3:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "633:5:226"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "616:16:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:23:226"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "604:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "604:36:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "604:36:226"
                }
              ]
            },
            "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "582:5:226",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "589:3:226",
                "type": ""
              }
            ],
            "src": "531:115:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "744:118:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "754:26:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "766:9:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "777:2:226",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "762:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:18:226"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "754:4:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "828:6:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "841:9:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "852:1:226",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "837:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "837:17:226"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "790:37:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "790:65:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "790:65:226"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "716:9:226",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "728:6:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "739:4:226",
                "type": ""
              }
            ],
            "src": "652:210:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "964:122:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "974:26:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "986:9:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "997:2:226",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "982:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "982:18:226"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "974:4:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1052:6:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1065:9:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1076:1:226",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1061:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1061:17:226"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1010:41:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:69:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1010:69:226"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "936:9:226",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "948:6:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "959:4:226",
                "type": ""
              }
            ],
            "src": "868:218:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1134:48:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1144:32:226",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1169:5:226"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1162:6:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:13:226"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1155:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:21:226"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1144:7:226"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1116:5:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1126:7:226",
                "type": ""
              }
            ],
            "src": "1092:90:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1232:105:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1242:89:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1257:5:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1264:66:226",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1253:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:78:226"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1242:7:226"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1214:5:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1224:7:226",
                "type": ""
              }
            ],
            "src": "1188:149:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1385:78:226",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1441:16:226",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1450:1:226",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1453:1:226",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1443:6:226"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:12:226"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1443:12:226"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1408:5:226"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1432:5:226"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "1415:16:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1415:23:226"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1405:2:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1405:34:226"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1398:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:42:226"
                  },
                  "nodeType": "YulIf",
                  "src": "1395:2:226"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1378:5:226",
                "type": ""
              }
            ],
            "src": "1343:120:226"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 226,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "635:1054:75:-:0;;;1097:70;;;;;;;;;;1121:39;821:10;1140:19;;1121:18;;;:39;;:::i;:::-;635:1054;;1478:209;1568:10;1553:25;;:11;:25;;;;;1545:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:4;1640:20;:33;1661:11;1640:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1478:209;:::o;7:366:226:-;;170:67;234:2;229:3;170:67;:::i;:::-;163:74;;246:93;335:3;246:93;:::i;:::-;364:2;359:3;355:12;348:19;;153:220;;;:::o;379:419::-;;583:2;572:9;568:18;560:26;;632:9;626:4;622:20;618:1;607:9;603:17;596:47;660:131;786:4;660:131;:::i;:::-;652:139;;550:248;;;:::o;804:169::-;;922:6;917:3;910:19;962:4;957:3;953:14;938:29;;900:73;;;;:::o;979:234::-;1119:34;1115:1;1107:6;1103:14;1096:58;1188:17;1183:2;1175:6;1171:15;1164:42;1085:128;:::o;635:1054:75:-;;;;;;;",
  "deployedSourceMap": "635:1054:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1259:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:55;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1259:140;1336:4;1359:20;:33;1380:11;1359:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1352:40;;1259:140;;;:::o;776:55::-;821:10;776:55;;;:::o;7:137:226:-;;90:6;77:20;68:29;;106:32;132:5;106:32;:::i;:::-;58:86;;;;:::o;150:260::-;;257:2;245:9;236:7;232:23;228:32;225:2;;;273:1;270;263:12;225:2;316:1;341:52;385:7;376:6;365:9;361:22;341:52;:::i;:::-;331:62;;287:116;215:195;;;;:::o;416:109::-;497:21;512:5;497:21;:::i;:::-;492:3;485:34;475:50;;:::o;531:115::-;616:23;633:5;616:23;:::i;:::-;611:3;604:36;594:52;;:::o;652:210::-;;777:2;766:9;762:18;754:26;;790:65;852:1;841:9;837:17;828:6;790:65;:::i;:::-;744:118;;;;:::o;868:218::-;;997:2;986:9;982:18;974:26;;1010:69;1076:1;1065:9;1061:17;1052:6;1010:69;:::i;:::-;964:122;;;;:::o;1092:90::-;;1169:5;1162:13;1155:21;1144:32;;1134:48;;;:::o;1188:149::-;;1264:66;1257:5;1253:78;1242:89;;1232:105;;;:::o;1343:120::-;1415:23;1432:5;1415:23;:::i;:::-;1408:5;1405:34;1395:2;;1453:1;1450;1443:12;1395:2;1385:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * https://eips.ethereum.org/EIPS/eip-214#specification\n * From the specification:\n * > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead\n * throw an exception.\n * > These operations include [...], LOG0, LOG1, LOG2, [...]\n *\n * therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works)\n * solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it\n */\ncontract SupportsInterfaceWithLookupMock is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 public constant INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev A mapping of interface id to whether or not it's supported.\n     */\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    /**\n     * @dev A contract implementing SupportsInterfaceWithLookup\n     * implement ERC165 itself.\n     */\n    constructor() {\n        _registerInterface(INTERFACE_ID_ERC165);\n    }\n\n    /**\n     * @dev Implement supportsInterface(bytes4) using a lookup table.\n     */\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @dev Private method for registering an interface.\n     */\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165InterfacesSupported: invalid interface id\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n}\n\ncontract ERC165InterfacesSupported is SupportsInterfaceWithLookupMock {\n    constructor(bytes4[] memory interfaceIds) {\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            _registerInterface(interfaceIds[i]);\n        }\n    }\n}\n",
  "sourcePath": "/home/sushant/Documents/blockchain_work/EatTheBlock/ecomapp2/contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
    "exportedSymbols": {
      "ERC165InterfacesSupported": [
        8110
      ],
      "IERC165": [
        25756
      ],
      "SupportsInterfaceWithLookupMock": [
        8081
      ]
    },
    "id": 8111,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8025,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 8026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8111,
        "sourceUnit": 25757,
        "src": "58:47:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8028,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25756,
              "src": "679:7:75"
            },
            "id": 8029,
            "nodeType": "InheritanceSpecifier",
            "src": "679:7:75"
          }
        ],
        "contractDependencies": [
          25756
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8027,
          "nodeType": "StructuredDocumentation",
          "src": "107:527:75",
          "text": " https://eips.ethereum.org/EIPS/eip-214#specification\n From the specification:\n > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead\n throw an exception.\n > These operations include [...], LOG0, LOG1, LOG2, [...]\n therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works)\n solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it"
        },
        "fullyImplemented": true,
        "id": 8081,
        "linearizedBaseContracts": [
          8081,
          25756
        ],
        "name": "SupportsInterfaceWithLookupMock",
        "nameLocation": "644:31:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "34d7006c",
            "id": 8032,
            "mutability": "constant",
            "name": "INTERFACE_ID_ERC165",
            "nameLocation": "799:19:75",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "776:55:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 8030,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:75",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783031666663396137",
              "id": 8031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "821:10:75",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 8033,
              "nodeType": "StructuredDocumentation",
              "src": "838:83:75",
              "text": " @dev A mapping of interface id to whether or not it's supported."
            },
            "id": 8037,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "958:20:75",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "926:52:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 8036,
              "keyType": {
                "id": 8034,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "934:6:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "926:23:75",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 8035,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "944:4:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8045,
              "nodeType": "Block",
              "src": "1111:56:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8042,
                        "name": "INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1140:19:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 8041,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8080,
                      "src": "1121:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 8043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:39:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8044,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:39:75"
                }
              ]
            },
            "documentation": {
              "id": 8038,
              "nodeType": "StructuredDocumentation",
              "src": "985:107:75",
              "text": " @dev A contract implementing SupportsInterfaceWithLookup\n implement ERC165 itself."
            },
            "id": 8046,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:75"
            },
            "returnParameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:75"
            },
            "scope": 8081,
            "src": "1097:70:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25755
            ],
            "body": {
              "id": 8059,
              "nodeType": "Block",
              "src": "1342:57:75",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8055,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "1359:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 8057,
                    "indexExpression": {
                      "id": 8056,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8049,
                      "src": "1380:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1359:33:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8054,
                  "id": 8058,
                  "nodeType": "Return",
                  "src": "1352:40:75"
                }
              ]
            },
            "documentation": {
              "id": 8047,
              "nodeType": "StructuredDocumentation",
              "src": "1173:81:75",
              "text": " @dev Implement supportsInterface(bytes4) using a lookup table."
            },
            "functionSelector": "01ffc9a7",
            "id": 8060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1268:17:75",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1318:8:75"
            },
            "parameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1293:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1286:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:20:75"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1336:4:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1335:6:75"
            },
            "scope": 8081,
            "src": "1259:140:75",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8079,
              "nodeType": "Block",
              "src": "1535:152:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8067,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8063,
                          "src": "1553:11:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 8068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1568:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1553:25:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313635496e7465726661636573537570706f727465643a20696e76616c696420696e74657266616365206964",
                        "id": 8070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1580:49:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        },
                        "value": "ERC165InterfacesSupported: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        }
                      ],
                      "id": 8066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1545:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:85:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8072,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:85:75"
                },
                {
                  "expression": {
                    "id": 8077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8073,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8037,
                        "src": "1640:20:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 8075,
                      "indexExpression": {
                        "id": 8074,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8063,
                        "src": "1661:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:33:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1676:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1640:40:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8078,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:40:75"
                }
              ]
            },
            "documentation": {
              "id": 8061,
              "nodeType": "StructuredDocumentation",
              "src": "1405:68:75",
              "text": " @dev Private method for registering an interface."
            },
            "id": 8080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "1487:18:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8063,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1513:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8080,
                  "src": "1506:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:20:75"
            },
            "returnParameters": {
              "id": 8065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:75"
            },
            "scope": 8081,
            "src": "1478:209:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8111,
        "src": "635:1054:75"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8082,
              "name": "SupportsInterfaceWithLookupMock",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8081,
              "src": "1729:31:75"
            },
            "id": 8083,
            "nodeType": "InheritanceSpecifier",
            "src": "1729:31:75"
          }
        ],
        "contractDependencies": [
          8081,
          25756
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8110,
        "linearizedBaseContracts": [
          8110,
          8081,
          25756
        ],
        "name": "ERC165InterfacesSupported",
        "nameLocation": "1700:25:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8108,
              "nodeType": "Block",
              "src": "1809:126:75",
              "statements": [
                {
                  "body": {
                    "id": 8106,
                    "nodeType": "Block",
                    "src": "1869:60:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8101,
                                "name": "interfaceIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8086,
                                "src": "1902:12:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 8103,
                              "indexExpression": {
                                "id": 8102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8090,
                                "src": "1915:1:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1902:15:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 8100,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8080,
                            "src": "1883:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 8104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:35:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8105,
                        "nodeType": "ExpressionStatement",
                        "src": "1883:35:75"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8093,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8090,
                      "src": "1839:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8094,
                        "name": "interfaceIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "1843:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 8095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1843:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1839:23:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8107,
                  "initializationExpression": {
                    "assignments": [
                      8090
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8090,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1832:1:75",
                        "nodeType": "VariableDeclaration",
                        "scope": 8107,
                        "src": "1824:9:75",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8092,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1836:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1824:13:75"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1864:3:75",
                      "subExpression": {
                        "id": 8097,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1864:1:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8099,
                    "nodeType": "ExpressionStatement",
                    "src": "1864:3:75"
                  },
                  "nodeType": "ForStatement",
                  "src": "1819:110:75"
                }
              ]
            },
            "id": 8109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "interfaceIds",
                  "nameLocation": "1795:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8109,
                  "src": "1779:28:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8084,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "1779:6:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 8085,
                    "nodeType": "ArrayTypeName",
                    "src": "1779:8:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:30:75"
            },
            "returnParameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:0:75"
            },
            "scope": 8110,
            "src": "1767:168:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8111,
        "src": "1691:246:75"
      }
    ],
    "src": "33:1905:75"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin/contracts/mocks/ERC165/ERC165InterfacesSupported.sol",
    "exportedSymbols": {
      "ERC165InterfacesSupported": [
        8110
      ],
      "IERC165": [
        25756
      ],
      "SupportsInterfaceWithLookupMock": [
        8081
      ]
    },
    "id": 8111,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8025,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 8026,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8111,
        "sourceUnit": 25757,
        "src": "58:47:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8028,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25756,
              "src": "679:7:75"
            },
            "id": 8029,
            "nodeType": "InheritanceSpecifier",
            "src": "679:7:75"
          }
        ],
        "contractDependencies": [
          25756
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8027,
          "nodeType": "StructuredDocumentation",
          "src": "107:527:75",
          "text": " https://eips.ethereum.org/EIPS/eip-214#specification\n From the specification:\n > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead\n throw an exception.\n > These operations include [...], LOG0, LOG1, LOG2, [...]\n therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works)\n solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it"
        },
        "fullyImplemented": true,
        "id": 8081,
        "linearizedBaseContracts": [
          8081,
          25756
        ],
        "name": "SupportsInterfaceWithLookupMock",
        "nameLocation": "644:31:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "34d7006c",
            "id": 8032,
            "mutability": "constant",
            "name": "INTERFACE_ID_ERC165",
            "nameLocation": "799:19:75",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "776:55:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 8030,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:75",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783031666663396137",
              "id": 8031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "821:10:75",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_33540519_by_1",
                "typeString": "int_const 33540519"
              },
              "value": "0x01ffc9a7"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 8033,
              "nodeType": "StructuredDocumentation",
              "src": "838:83:75",
              "text": " @dev A mapping of interface id to whether or not it's supported."
            },
            "id": 8037,
            "mutability": "mutable",
            "name": "_supportedInterfaces",
            "nameLocation": "958:20:75",
            "nodeType": "VariableDeclaration",
            "scope": 8081,
            "src": "926:52:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
              "typeString": "mapping(bytes4 => bool)"
            },
            "typeName": {
              "id": 8036,
              "keyType": {
                "id": 8034,
                "name": "bytes4",
                "nodeType": "ElementaryTypeName",
                "src": "934:6:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes4",
                  "typeString": "bytes4"
                }
              },
              "nodeType": "Mapping",
              "src": "926:23:75",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                "typeString": "mapping(bytes4 => bool)"
              },
              "valueType": {
                "id": 8035,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "944:4:75",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8045,
              "nodeType": "Block",
              "src": "1111:56:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8042,
                        "name": "INTERFACE_ID_ERC165",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8032,
                        "src": "1140:19:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 8041,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8080,
                      "src": "1121:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 8043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:39:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8044,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:39:75"
                }
              ]
            },
            "documentation": {
              "id": 8038,
              "nodeType": "StructuredDocumentation",
              "src": "985:107:75",
              "text": " @dev A contract implementing SupportsInterfaceWithLookup\n implement ERC165 itself."
            },
            "id": 8046,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:75"
            },
            "returnParameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:75"
            },
            "scope": 8081,
            "src": "1097:70:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25755
            ],
            "body": {
              "id": 8059,
              "nodeType": "Block",
              "src": "1342:57:75",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 8055,
                      "name": "_supportedInterfaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8037,
                      "src": "1359:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                        "typeString": "mapping(bytes4 => bool)"
                      }
                    },
                    "id": 8057,
                    "indexExpression": {
                      "id": 8056,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8049,
                      "src": "1380:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1359:33:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8054,
                  "id": 8058,
                  "nodeType": "Return",
                  "src": "1352:40:75"
                }
              ]
            },
            "documentation": {
              "id": 8047,
              "nodeType": "StructuredDocumentation",
              "src": "1173:81:75",
              "text": " @dev Implement supportsInterface(bytes4) using a lookup table."
            },
            "functionSelector": "01ffc9a7",
            "id": 8060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1268:17:75",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8051,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1318:8:75"
            },
            "parameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1293:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1286:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:20:75"
            },
            "returnParameters": {
              "id": 8054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8060,
                  "src": "1336:4:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8052,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1336:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1335:6:75"
            },
            "scope": 8081,
            "src": "1259:140:75",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8079,
              "nodeType": "Block",
              "src": "1535:152:75",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 8069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 8067,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8063,
                          "src": "1553:11:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30786666666666666666",
                          "id": 8068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1568:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4294967295_by_1",
                            "typeString": "int_const 4294967295"
                          },
                          "value": "0xffffffff"
                        },
                        "src": "1553:25:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313635496e7465726661636573537570706f727465643a20696e76616c696420696e74657266616365206964",
                        "id": 8070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1580:49:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        },
                        "value": "ERC165InterfacesSupported: invalid interface id"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ab988774bd2736ab186ba4a48b62a1df6ee4d364b326b9ef43e1c20f8f72aade",
                          "typeString": "literal_string \"ERC165InterfacesSupported: invalid interface id\""
                        }
                      ],
                      "id": 8066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1545:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:85:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8072,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:85:75"
                },
                {
                  "expression": {
                    "id": 8077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8073,
                        "name": "_supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8037,
                        "src": "1640:20:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 8075,
                      "indexExpression": {
                        "id": 8074,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8063,
                        "src": "1661:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1640:33:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 8076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1676:4:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1640:40:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8078,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:40:75"
                }
              ]
            },
            "documentation": {
              "id": 8061,
              "nodeType": "StructuredDocumentation",
              "src": "1405:68:75",
              "text": " @dev Private method for registering an interface."
            },
            "id": 8080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_registerInterface",
            "nameLocation": "1487:18:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8063,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1513:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8080,
                  "src": "1506:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8062,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:20:75"
            },
            "returnParameters": {
              "id": 8065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:75"
            },
            "scope": 8081,
            "src": "1478:209:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 8111,
        "src": "635:1054:75"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8082,
              "name": "SupportsInterfaceWithLookupMock",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8081,
              "src": "1729:31:75"
            },
            "id": 8083,
            "nodeType": "InheritanceSpecifier",
            "src": "1729:31:75"
          }
        ],
        "contractDependencies": [
          8081,
          25756
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8110,
        "linearizedBaseContracts": [
          8110,
          8081,
          25756
        ],
        "name": "ERC165InterfacesSupported",
        "nameLocation": "1700:25:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8108,
              "nodeType": "Block",
              "src": "1809:126:75",
              "statements": [
                {
                  "body": {
                    "id": 8106,
                    "nodeType": "Block",
                    "src": "1869:60:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 8101,
                                "name": "interfaceIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8086,
                                "src": "1902:12:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 8103,
                              "indexExpression": {
                                "id": 8102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8090,
                                "src": "1915:1:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1902:15:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 8100,
                            "name": "_registerInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8080,
                            "src": "1883:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                              "typeString": "function (bytes4)"
                            }
                          },
                          "id": 8104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1883:35:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 8105,
                        "nodeType": "ExpressionStatement",
                        "src": "1883:35:75"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 8096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 8093,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8090,
                      "src": "1839:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 8094,
                        "name": "interfaceIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8086,
                        "src": "1843:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 8095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1843:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1839:23:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8107,
                  "initializationExpression": {
                    "assignments": [
                      8090
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 8090,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1832:1:75",
                        "nodeType": "VariableDeclaration",
                        "scope": 8107,
                        "src": "1824:9:75",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1824:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 8092,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 8091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1836:1:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1824:13:75"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 8098,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1864:3:75",
                      "subExpression": {
                        "id": 8097,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8090,
                        "src": "1864:1:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8099,
                    "nodeType": "ExpressionStatement",
                    "src": "1864:3:75"
                  },
                  "nodeType": "ForStatement",
                  "src": "1819:110:75"
                }
              ]
            },
            "id": 8109,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8086,
                  "mutability": "mutable",
                  "name": "interfaceIds",
                  "nameLocation": "1795:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 8109,
                  "src": "1779:28:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                    "typeString": "bytes4[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8084,
                      "name": "bytes4",
                      "nodeType": "ElementaryTypeName",
                      "src": "1779:6:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 8085,
                    "nodeType": "ArrayTypeName",
                    "src": "1779:8:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                      "typeString": "bytes4[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1778:30:75"
            },
            "returnParameters": {
              "id": 8088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1809:0:75"
            },
            "scope": 8110,
            "src": "1767:168:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8111,
        "src": "1691:246:75"
      }
    ],
    "src": "33:1905:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-09T18:32:24.175Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "A contract implementing SupportsInterfaceWithLookup implement ERC165 itself."
      },
      "supportsInterface(bytes4)": {
        "details": "Implement supportsInterface(bytes4) using a lookup table."
      }
    },
    "stateVariables": {
      "_supportedInterfaces": {
        "details": "A mapping of interface id to whether or not it's supported."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "https://eips.ethereum.org/EIPS/eip-214#specification From the specification: > Any attempts to make state-changing operations inside an execution instance with STATIC set to true will instead throw an exception. > These operations include [...], LOG0, LOG1, LOG2, [...] therefore, because this contract is staticcall'd we need to not emit events (which is how solidity-coverage works) solidity-coverage ignores the /mocks folder, so we duplicate its implementation here to avoid instrumenting it",
    "version": 1
  }
}