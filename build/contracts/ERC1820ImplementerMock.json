{
  "contractName": "ERC1820ImplementerMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "registerInterfaceForAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"registerInterfaceForAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol\":\"ERC1820ImplementerMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol\":{\"keccak256\":\"0x307a5c88942df90fc3a0eb15c1ce50af7d1acfcb95f30e8f617760d3308cd423\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28e2965361dcd757db77be5bb64b41b847dd6ccc0b745939af8a9040aa509970\",\"dweb:/ipfs/QmXbWwzEDTgW3K6V6S5AobF8PX3LYUS598YZnvM5kPMY3e\"]},\"project:/contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x3e1a3bb5490e316d5ece33fec5ee844dc6194472ad4491e82475b83ee336660d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b56f566ec3cd2ca4c7788045a444f686d1b319a581db8b77ee9202dcf117b0ad\",\"dweb:/ipfs/QmQqg96azFhL4tkJaadKy78KGJqGTUSCXs9ZWwvPpMT6ps\"]},\"project:/contracts/openzeppelin/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xd658a25ce73a588bba55fa518ea79b3a581f14c411fb44a38e78f87e3a09ffcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791297362508954c107c100110591cdd6b973a7257262aaf2630917552672a29\",\"dweb:/ipfs/QmWqXwQa6S9xQXx5oy5TB3N7TmyedVy3sJnfTLWP4jCsbp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b604051610062919061020c565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a681610263565b92915050565b6000813590506101bb8161027a565b92915050565b600080604083850312156101d457600080fd5b60006101e2858286016101ac565b92505060206101f385828601610197565b9150509250929050565b61020681610239565b82525050565b600060208201905061022160008301846101fd565b92915050565b600061023282610243565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026c81610227565b811461027757600080fd5b50565b61028381610239565b811461028e57600080fd5b5056fea264697066735822122097fe9ac39cbf2c90b8efc9d7ae24ac34e9342d66b24cd3fdef5e7cea33bdfd7564736f6c63430008020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b610055600480360381019061005091906101c1565b610087565b604051610062919061020c565b60405180910390f35b610085600480360381019061008091906101c1565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b6000813590506101a681610263565b92915050565b6000813590506101bb8161027a565b92915050565b600080604083850312156101d457600080fd5b60006101e2858286016101ac565b92505060206101f385828601610197565b9150509250929050565b61020681610239565b82525050565b600060208201905061022160008301846101fd565b92915050565b600061023282610243565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61026c81610227565b811461027757600080fd5b50565b61028381610239565b811461028e57600080fd5b5056fea264697066735822122097fe9ac39cbf2c90b8efc9d7ae24ac34e9342d66b24cd3fdef5e7cea33bdfd7564736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1632:226",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:226"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:226"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:226"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:226"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:226",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:226",
                "type": ""
              }
            ],
            "src": "7:139:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:226"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:226"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:226"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:226"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:226",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:226",
                "type": ""
              }
            ],
            "src": "152:139:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "380:324:226",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "426:16:226",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "435:1:226",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "438:1:226",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "428:6:226"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "428:12:226"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "428:12:226"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "401:7:226"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "410:9:226"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "397:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "397:23:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "422:2:226",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "393:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "393:32:226"
                  },
                  "nodeType": "YulIf",
                  "src": "390:2:226"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "452:117:226",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "467:15:226",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "481:1:226",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "471:6:226",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:63:226",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "531:9:226"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "542:6:226"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "527:3:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "527:22:226"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "551:7:226"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "506:20:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "506:53:226"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:226"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "579:118:226",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "594:16:226",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "608:2:226",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "598:6:226",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "624:63:226",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "659:9:226"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "670:6:226"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:22:226"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "679:7:226"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "634:20:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "634:53:226"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "624:6:226"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "342:9:226",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "353:7:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "365:6:226",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "373:6:226",
                "type": ""
              }
            ],
            "src": "297:407:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "775:53:226",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "792:3:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "815:5:226"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "797:17:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:24:226"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "785:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:37:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "785:37:226"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "763:5:226",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "770:3:226",
                "type": ""
              }
            ],
            "src": "710:118:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "932:124:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "942:26:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "954:9:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "965:2:226",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "950:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:18:226"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "942:4:226"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1022:6:226"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1035:9:226"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1046:1:226",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1031:3:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1031:17:226"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "978:43:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "978:71:226"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "978:71:226"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "904:9:226",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "916:6:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "927:4:226",
                "type": ""
              }
            ],
            "src": "834:222:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1107:51:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1117:35:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1146:5:226"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1128:17:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1128:24:226"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1117:7:226"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1089:5:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1099:7:226",
                "type": ""
              }
            ],
            "src": "1062:96:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1209:32:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1219:16:226",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1230:5:226"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1219:7:226"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1191:5:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1201:7:226",
                "type": ""
              }
            ],
            "src": "1164:77:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1292:81:226",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1302:65:226",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1317:5:226"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1324:42:226",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1313:3:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1313:54:226"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1302:7:226"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1274:5:226",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1284:7:226",
                "type": ""
              }
            ],
            "src": "1247:126:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:79:226",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1479:16:226",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1488:1:226",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1491:1:226",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1481:6:226"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1481:12:226"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1481:12:226"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1445:5:226"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1470:5:226"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1452:17:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1452:24:226"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1442:2:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:35:226"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1435:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1435:43:226"
                  },
                  "nodeType": "YulIf",
                  "src": "1432:2:226"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1415:5:226",
                "type": ""
              }
            ],
            "src": "1379:122:226"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:79:226",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1607:16:226",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1616:1:226",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:226",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1609:6:226"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1609:12:226"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1609:12:226"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1573:5:226"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1598:5:226"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "1580:17:226"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1580:24:226"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1570:2:226"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:35:226"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1563:6:226"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:43:226"
                  },
                  "nodeType": "YulIf",
                  "src": "1560:2:226"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1543:5:226",
                "type": ""
              }
            ],
            "src": "1507:122:226"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 226,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "115:215:81:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "115:215:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:280:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;175:153:81;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;717:280:212;876:7;906:20;:35;927:13;906:35;;;;;;;;;;;:44;942:7;906:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;985:4;977:13;;906:84;;;510:33;906:84;899:91;;717:280;;;;:::o;175:153:81:-;269:52;298:13;313:7;269:28;:52::i;:::-;175:153;;:::o;1232:163:212:-;1384:4;1337:20;:35;1358:13;1337:35;;;;;;;;;;;:44;1373:7;1337:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1232:163;;:::o;7:139:226:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:407::-;;;422:2;410:9;401:7;397:23;393:32;390:2;;;438:1;435;428:12;390:2;481:1;506:53;551:7;542:6;531:9;527:22;506:53;:::i;:::-;496:63;;452:117;608:2;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;579:118;380:324;;;;;:::o;710:118::-;797:24;815:5;797:24;:::i;:::-;792:3;785:37;775:53;;:::o;834:222::-;;965:2;954:9;950:18;942:26;;978:71;1046:1;1035:9;1031:17;1022:6;978:71;:::i;:::-;932:124;;;;:::o;1062:96::-;;1128:24;1146:5;1128:24;:::i;:::-;1117:35;;1107:51;;;:::o;1164:77::-;;1230:5;1219:16;;1209:32;;;:::o;1247:126::-;;1324:42;1317:5;1313:54;1302:65;;1292:81;;;:::o;1379:122::-;1452:24;1470:5;1452:24;:::i;:::-;1445:5;1442:35;1432:2;;1491:1;1488;1481:12;1432:2;1422:79;:::o;1507:122::-;1580:24;1598:5;1580:24;:::i;:::-;1573:5;1570:35;1560:2;;1619:1;1616;1609:12;1560:2;1550:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/ERC1820Implementer.sol\";\n\ncontract ERC1820ImplementerMock is ERC1820Implementer {\n    function registerInterfaceForAddress(bytes32 interfaceHash, address account) public {\n        _registerInterfaceForAddress(interfaceHash, account);\n    }\n}\n",
  "sourcePath": "/home/sushant/Documents/blockchain_work/EatTheBlock/ecomapp2/contracts/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        25744
      ],
      "ERC1820ImplementerMock": [
        8230
      ],
      "IERC1820Implementer": [
        25770
      ]
    },
    "id": 8231,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8213,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:81"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 8214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8231,
        "sourceUnit": 25745,
        "src": "58:55:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8215,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25744,
              "src": "150:18:81"
            },
            "id": 8216,
            "nodeType": "InheritanceSpecifier",
            "src": "150:18:81"
          }
        ],
        "contractDependencies": [
          25744,
          25770
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8230,
        "linearizedBaseContracts": [
          8230,
          25744,
          25770
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "124:22:81",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8228,
              "nodeType": "Block",
              "src": "259:69:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8224,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8218,
                        "src": "298:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8225,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8220,
                        "src": "313:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8223,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25743,
                      "src": "269:28:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:52:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8227,
                  "nodeType": "ExpressionStatement",
                  "src": "269:52:81"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 8229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "184:27:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8218,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "220:13:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 8229,
                  "src": "212:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8217,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8220,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "243:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 8229,
                  "src": "235:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "211:40:81"
            },
            "returnParameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:81"
            },
            "scope": 8230,
            "src": "175:153:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8231,
        "src": "115:215:81"
      }
    ],
    "src": "33:298:81"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        25744
      ],
      "ERC1820ImplementerMock": [
        8230
      ],
      "IERC1820Implementer": [
        25770
      ]
    },
    "id": 8231,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8213,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:81"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 8214,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8231,
        "sourceUnit": 25745,
        "src": "58:55:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8215,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25744,
              "src": "150:18:81"
            },
            "id": 8216,
            "nodeType": "InheritanceSpecifier",
            "src": "150:18:81"
          }
        ],
        "contractDependencies": [
          25744,
          25770
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 8230,
        "linearizedBaseContracts": [
          8230,
          25744,
          25770
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "124:22:81",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8228,
              "nodeType": "Block",
              "src": "259:69:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 8224,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8218,
                        "src": "298:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 8225,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8220,
                        "src": "313:7:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 8223,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25743,
                      "src": "269:28:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 8226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:52:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8227,
                  "nodeType": "ExpressionStatement",
                  "src": "269:52:81"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 8229,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "184:27:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8218,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "220:13:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 8229,
                  "src": "212:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8217,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8220,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "243:7:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 8229,
                  "src": "235:15:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "235:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "211:40:81"
            },
            "returnParameters": {
              "id": 8222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:81"
            },
            "scope": 8230,
            "src": "175:153:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 8231,
        "src": "115:215:81"
      }
    ],
    "src": "33:298:81"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.2",
  "updatedAt": "2021-08-09T18:32:24.187Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}